apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-be-deployment
  labels:
    name: my-app-be
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.beDeployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.beDeployment.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.beDeployment.labels.app }}
    spec:
      containers:
        - name: my-app-be-container
          image: "{{ .Values.beDeployment.image.repository }}:{{ .Values.deploymentCommon.image.tag }}"
          imagePullPolicy: {{ .Values.deploymentCommon.image.pullPolicy }}
          ports:
            - containerPort: {{  .Values.beDeployment.containerPort }}
          resources:
            requests:
              cpu: {{ .Values.beDeployment.resources.requests.cpu }}
              memory: {{ .Values.beDeployment.resources.requests.memory }}
            limits:
              cpu: {{ .Values.beDeployment.resources.limits.cpu }}
              memory: {{ .Values.beDeployment.resources.limits.memory }}
          readinessProbe:
            httpGet:
              path: {{  .Values.beDeployment.probePath }}
              port: {{  .Values.beDeployment.containerPort }}
            failureThreshold: 3
            periodSeconds: 20
            initialDelaySeconds: 25
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: {{  .Values.beDeployment.probePath }}
              port: {{  .Values.beDeployment.containerPort }}
            failureThreshold: 3
            periodSeconds: 20
            initialDelaySeconds: 25
            successThreshold: 1
            timeoutSeconds: 5
      dnsPolicy: {{ .Values.deploymentCommon.dnsPolicy }}
      restartPolicy: {{ .Values.deploymentCommon.restartPolicy }}
      serviceAccountName:  {{ .Values.beServiceAccount.name }}
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
