
nameOverride: ""
fullnameOverride: ""

deploymentCommon:
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  image:
    tag: latest
    pullPolicy: Always
  nodeSelector: {}

feDeployment:
  replicas: 1
  labels:
    app: my-app-fe
  ports:
  - containerPort: 80
  image:
    repository: vyathartha/my-app-fe
  resources: # The resource requests and limits for the container
    requests:
      cpu: "250m"
      memory: "200Mi"
    limits:
      cpu: "500m"
      memory: "500Mi"

feService:
  name: my-app-fe-service
  type: ClusterIP
  port: 8082


beDeployment:
  replicas: 1
  labels:
    app: my-app-be
  ports:
    - containerPort: 8080
  image:
    repository: vyathartha/user-app
  resources: # The resource requests and limits for the container
    requests:
      cpu: "250m"
      memory: "200Mi"
    limits:
      cpu: "500m"
      memory: "500Mi"
      
beService:
  name: my-app-be-service
  type: ClusterIP
  port: 8081

ingress:
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
         rewrite ^/api(/|$)(.*) /$2 break;
  ingressClassName: nginx
  rules:
    - host: hello-world.example
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: "{{ .Values.beService.name }}"
                port: 8081
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ .Values.feService.name }}"
                port: 8082

  
# Default values for local.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""


# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000



# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}
